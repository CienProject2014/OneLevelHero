package com.mygdx.manager;

import javax.annotation.PostConstruct;

import org.springframework.stereotype.Component;

import com.badlogic.gdx.Gdx;
import com.uwsoft.editor.renderer.data.ProjectInfoVO;
import com.uwsoft.editor.renderer.data.ResolutionEntryVO;
import com.uwsoft.editor.renderer.resources.ResourceManager;

@Component
public class PlatformResourceManager extends ResourceManager {
	public ResolutionEntryVO currentResolution;

	public float stageWidth;

	@PostConstruct
	public void initPlatformerResources() {
		// Loading project configuration file that keeps list of available
		// resolutions
		loadProjectVO();

		// figure out the best resolution from the list of available resolutions
		// for the existing screen size
		currentResolution = getBestResolutionMatch(getProjectVO());

		// Game stage width should be dynamic based on screen size, so if you
		// have wider screen, instead of stretching
		// It will be just more level visible for player.
		stageWidth = Gdx.graphics.getHeight() / currentResolution.height
				* Gdx.graphics.getWidth();

		// Sets working resolution, so init all resources will load in to memory
		// resources of that resolution/size only
		setWorkingResolution(currentResolution.name);

		// loads into memory all needed assets
		initAllResources();
	}

	/**
	 * This method finds the closest match from the available texture
	 * resolutions generated by overlap2d that are closest in size to the
	 * current screen size. The comparison goes by height.
	 * 
	 * @param projctInfoVo
	 * @return ResolutionEntryVO
	 */
	public ResolutionEntryVO getBestResolutionMatch(ProjectInfoVO projectInfoVo) {
		float deltaSize = Math.abs(projectInfoVo.originalResolution.height
				- Gdx.graphics.getHeight());
		ResolutionEntryVO result = projectInfoVo.originalResolution;

		for (ResolutionEntryVO revo : projectInfoVo.resolutions) {
			float newDeltaSize = Math.abs(revo.height
					- Gdx.graphics.getHeight());
			if (deltaSize > newDeltaSize) {
				deltaSize = newDeltaSize;
				result = revo;
			}
		}

		return result;
	}
}